priority 10

extends c

# Preprocessor {{{
snippet #inc+ "#include c++" b
#include <${1:iostream}>
endsnippet
# }}}

# std:: {{{
snippet std "std:: type"
std::${1:array}<${2:T}> ${3};
endsnippet

snippet array "array"
std::array<${1:T}, ${2:N}> ${3};
endsnippet

snippet vector "vector"
std::vector<${1:T}> ${2};
endsnippet

snippet list "list"
std::list<${1:T}> ${2};
endsnippet

snippet set "set"
std::set<${1:T}> ${2};
endsnippet

snippet map "map"
std::map<${1:K}, ${2:V}> ${3};
endsnippet

snippet cout "output"
std::cout << ${1} << std::endl;
endsnippet

snippet cin "input"
std::cin >> ${1};
endsnippet

snippet ptr:s "shared pointer"
std::shared_ptr<${1:T}> ${2} = std::make_shared<$1>(${3});
endsnippet

snippet ptr:u "unique pointer"
std::unique_ptr<${1:T}> ${2} = std::make_unique<$1>(${3});
endsnippet
# }}}

# Classes {{{
snippet cls "Class"
class ${1:`!v expand('%:t:r')`} {
${VISUAL}${0}
};
endsnippet

snippet pri "private"
private
endsnippet

snippet pro "protected"
protected
endsnippet

snippet pub "public"
public
endsnippet

snippet sta "static"
static
endsnippet

snippet fri "friend"
friend
endsnippet

snippet mut "mutable"
mutable
endsnippet

snippet tem "template"
template <${1:class} ${2:Type}>
endsnippet

snippet vir "virtual"
virtual ${1:void} ${2:func}(${3:params})
endsnippet
# }}}

# Misc {{{
snippet try "try ... catch"
try {
	${VISUAL}${2}
catch(${1}) {
	${3}
}
endsnippet

snippet fore "foreach loop" b
for(${1:auto} ${2:i} : ${3:container}) {
	${VISUAL}${0}
}
endsnippet

snippet ld "lambda"
[${1}](${2}) ${4:-> ${3:int}};
endsnippet

snippet fold "vim fold" b
/// ${1:description} {{{
${VISUAL}${0}
/// }}}
endsnippet
# }}}

